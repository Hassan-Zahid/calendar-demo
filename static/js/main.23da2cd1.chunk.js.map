{"version":3,"sources":["components/JobStat.jsx","config/material-ui/theme.js","components/LiveSearch.jsx","components/AppointmentFields.jsx","components/AppointmentModal.jsx","App.js","reportWebVitals.js","index.js"],"names":["StyledDialogContentText","withStyles","root","maxWidth","height","marginBottom","fontSize","DialogContentText","TextWrapper","styled","Box","display","alignItems","justifyContent","wordBreak","color","JobStat","label","content","Fragment","Grid","container","spacing","style","item","xs","theme","createMuiTheme","typography","palette","primary","main","LiveSearch","props","selectedJob","selectedItem","onChange","apiEndPoint","useState","searchTerm","setSearchTerm","React","open","setOpen","doSearch","setDoSearch","options","setOptions","keyPress","e","keyCode","useEffect","a","fetch","response","json","data","Autocomplete","getOptionLabel","option","name","reason","id","size","onOpen","onClose","loading","disabled","renderOption","inputValue","matches","match","parts","parse","map","part","index","highlight","text","renderInput","params","TextField","autoFocus","target","value","variant","InputProps","endAdornment","CircularProgress","onKeyDown","fondtWeight","StyledCheckBox","Checkbox","padding","marginTop","StyledOutlinedInput","input","OutlinedInput","useStyles","makeStyles","flexWrap","margin","minWidth","textField","AppointmentFields","classes","setSelectedJob","setWarning","FormControl","className","width","type","defaultValue","InputLabelProps","shrink","checked","CustomActionBar","NameWrapper","fontWeight","EditBtnWrapper","Typography","cursor","borderRadius","lineHeight","textAlign","clear","backgroundColor","border","marginRight","position","borderTopLeftRadius","borderBottomLeftRadius","background","top","right","bottom","left","StyledAddBtn","textTransform","Button","DialogContent","filledWarning","borderColor","icon","Alert","MuiDialogContent","minHeight","PaperComponent","handle","cancel","Paper","AppointmentModal","title","invoice_id","job_id","setSelectedInvoiceId","setSelectedJobID","fullScreen","useMediaQuery","breakpoints","down","handleClickOpen","handleClose","ThemeProvider","Tooltip","placement","arrow","interactive","TransitionComponent","Fade","onClick","event","preventDefault","stopPropagation","startIcon","Dialog","aria-labelledby","DialogTitle","dividers","proposal","defaultProps","AppointmentsHeader","borderImage","borderStyle","borderWidth","fontFamily","HeadingWrapper","rand","Math","round","random","getModalStyle","transform","marginLeft","bullet","pos","themeVariant","now","Date","defaultEvents","start","getFullYear","getMonth","end","getDate","App","view","setView","setEvents","myEvents","setMyEvents","tempEvent","setTempEvent","isEdit","setEdit","setAnchor","popupEventTitle","setTitle","popupEventDescription","setDescription","popupEventAllDay","setAllDay","popupEventDate","setDate","popupEventStatus","setStatus","mySelectedDate","setSelectedDate","handleOpen","saveEvent","useCallback","newEvent","description","allDay","status","findIndex","x","newEventList","splice","deleteEvent","filter","setTimeout","snackbar","button","action","prevEvents","message","loadPopupForm","onSelectedDateChange","ev","args","date","onEventClick","domEvent","onEventCreated","onEventDeleted","onEventUpdated","useMemo","medium","controls","touchUi","handler","cssClass","getJson","events","schedule","calView","setCalView","changeView","calendar","labels","Card","dragToMove","dragToResize","clickToCreate","dragToCreate","selectedDate","renderHeader","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23da2cd1.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Grid,\n  Box,\n  styled,\n  withStyles,\n  DialogContentText,\n} from '@material-ui/core';\n\nconst StyledDialogContentText = withStyles({\n  root: {\n    maxWidth:300,\n    height:30,\n    marginBottom: 3,\n    fontSize: 16,\n  },\n})(DialogContentText);\n\nconst TextWrapper = styled(Box)({\n  height: '100%',\n  fontSize: '16px',\n  marginBottom: '10px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  wordBreak: 'break-all',\n  '& > p': {\n    color: '#333333',\n  },\n});\n\nexport const JobStat = ({ label, content }) => {\n  return (\n    <React.Fragment>\n    <Grid container spacing={1} style={{marginBottom:15}}>\n      <Grid item xs={4}>\n          <TextWrapper>\n            {label}\n          </TextWrapper>\n        </Grid>\n        <Grid item xs={1} />\n        <Grid item xs={7}>\n          {' '}\n          <StyledDialogContentText>{content}</StyledDialogContentText>\n        </Grid>\n    </Grid>\n    </React.Fragment>\n  );\n};\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n  typography: {\n    fontSize: 14,\n  },\n  palette: {\n    primary: {\n      main: '#1587FA',\n    },\n  },\n});\n","import React, { useEffect, useState } from 'react';\nimport {TextField, withStyles, styled, Typography} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport { JobStat } from './JobStat';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function LiveSearch(props) {\n  const { selectedJob, selectedItem, onChange, apiEndPoint } = props;\n  const [searchTerm, setSearchTerm] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const [doSearch, setDoSearch] = useState(false);\n  const [options, setOptions] = useState([]);\n\n  const keyPress = (e) => {\n    if (e.keyCode == 13) {\n      setDoSearch(true);\n    }\n  };\n\n  useEffect(() => {\n    if (doSearch) {\n      (async () => {\n        const response = await fetch(`${apiEndPoint}${searchTerm}`);\n        const data = await response.json();\n        setOptions(data);\n        setDoSearch(false);\n      })();\n    }\n  }, [doSearch]);\n\n  useEffect(() => {\n    if (selectedItem) {\n      setSearchTerm(selectedItem);\n    }\n  }, [selectedJob]);\n\n  return (\n    <Autocomplete\n\n      options={options}\n      getOptionLabel={(option) => option.name}\n      onChange={(e, reason) => {\n        onChange(reason ? reason.id : null);\n        setSearchTerm(reason ? reason.name : '');\n      }}\n      size=\"small\"\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      loading={doSearch}\n      disabled={selectedItem && true}\n      renderOption={(option, { inputValue }) => {\n        const matches = match(option.name, inputValue);\n        const parts = parse(option.name, matches);\n        return (\n          <div>\n            {parts.map((part, index) => {\n              return (\n                <span\n                  key={index}\n                  style={{ ...(part.highlight && { color: '#1488FC' }) }}\n                >\n                  {part.text}\n                </span>\n              );\n            })}\n          </div>\n        );\n      }}\n      inputValue={searchTerm}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          {...(!selectedItem && {label:\"Select an Option\"})}\n          size = \"small\"\n          autoFocus={!open}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          variant=\"outlined\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {doSearch ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n          onKeyDown={keyPress}\n        />\n      )}\n    />\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {\n  Grid,\n  Box,\n  styled,\n  Typography,\n  withStyles,\n  InputAdornment,\n  FormControl,\n} from '@material-ui/core';\n\nconst TextWrapper = styled(Box)({\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  wordBreak: 'break-all',\n  fontSize: '16px',\n  '& > p': {\n    color: '#333333',\n    fontSize: 16,\n    fondtWeight: 'bold'\n  },\n});\n\nconst StyledCheckBox = styled(Checkbox)({\n  padding:0,\n  marginTop:5,\n  marginBottom:5\n});\n\nconst StyledOutlinedInput = withStyles({\n  root: {\n    maxWidth: 300, height: 40\n  },\n  input: {\n    fontSize: 16\n  },\n})(OutlinedInput);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    marginBottom: 5,\n    marginTop: 5,\n    minWidth:'75%'\n  },\n  textField: {\n    maxWidth: '25ch',\n  },\n}));\n\nconst AppointmentFields = (props) => {\n  const classes = useStyles();\n  const { selectedJob, setSelectedJob, setWarning } = props;\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={4}>\n        <TextWrapper>Users</TextWrapper>\n      </Grid>\n      <Grid item xs={1} />\n      <Grid item xs={7}>\n        <FormControl className={classes.margin} variant=\"outlined\">\n            <StyledOutlinedInput\n              size=\"large\"\n              id=\"outlined-adornment-amount\"\n            />\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={4}>\n        <TextWrapper>Service Areas</TextWrapper>\n      </Grid>\n      <Grid item xs={1} />\n      <Grid item xs={7}>\n        <FormControl className={classes.margin} variant=\"outlined\">\n          <StyledOutlinedInput\n            size=\"large\"\n            id=\"outlined-adornment-amount\"\n          />\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={4}>\n        <TextWrapper>Start time</TextWrapper>\n      </Grid>\n      <Grid item xs={1} />\n      <Grid item xs={7}>\n        <FormControl className={classes.margin} style={{width:'100%'}} variant=\"outlined\">\n          <StyledOutlinedInput\n            size=\"large\"\n            id=\"outlined-adornment-amount\"\n            type=\"datetime-local\"\n            defaultValue=\"2017-05-24T10:30\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={4}>\n        <TextWrapper>End time</TextWrapper>\n      </Grid>\n      <Grid item xs={1} />\n      <Grid item xs={7}>\n        <FormControl className={classes.margin} style={{width:'100%'}} variant=\"outlined\">\n            <StyledOutlinedInput\n              size=\"sm\"\n              id=\"outlined-adornment-amount\"\n              type=\"datetime-local\"\n              defaultValue=\"2017-05-24T10:30\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={4}>\n        <TextWrapper>Recurring</TextWrapper>\n      </Grid>\n      <Grid item xs={1} />\n      <Grid item xs={7}>\n        <FormControl className={classes.margin} variant=\"outlined\">\n          <StyledCheckBox\n            checked=\"true\"\n            size=\"small\"\n            // onChange={handleChange}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={4}>\n        <TextWrapper>New Note</TextWrapper>\n      </Grid>\n      <Grid item xs={1} />\n      <Grid item xs={7}>\n        <FormControl className={classes.margin} variant=\"outlined\">\n          <StyledOutlinedInput\n            style={{ maxWidth: 300, height: 100}}\n            size=\"large\"\n            id=\"outlined-adornment-amount\"\n          />\n        </FormControl>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AppointmentFields;\n","import React, { useEffect, useState } from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Button,\n  Tooltip,\n  Dialog,\n  Grid,\n  Box,\n  styled,\n  Fade,\n  withStyles,\n  CircularProgress,\n  DialogContent as MuiDialogContent,\n  DialogTitle,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { ThemeProvider, useTheme } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport { JobStat } from './JobStat';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { theme } from '../config/material-ui/theme';\nimport Draggable from 'react-draggable';\nimport LiveSearch from './LiveSearch';\nimport Alert from '@material-ui/lab/Alert';\nimport AppointmentFields from './AppointmentFields';\nimport { getByPlaceholderText } from '@testing-library/dom';\n\nconst CustomActionBar = styled(Box)({\n  marginTop: 40,\n  display: 'flex',\n  justifyContent: 'flex-end',\n});\n\n\nconst CircularProgressWrapper = styled(Box)({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n});\n\nconst NameWrapper = styled(Box)({\n  fontSize: '18px',\n  fontWeight:'bold',\n  display: 'flex',\n  justifyContent: 'space-between'\n});\n\nconst MarginWrapper = styled(Box)({\n  height: 25,\n  marginBottom:'30px',\n  width: '100%',\n});\n\nconst JobInvoiceTyp = styled(Typography)({\n  cursor: 'pointer',\n  borderRadius: '3px',\n  lineHeight: '2.3',\n  margin: '4px',\n  textAlign: 'left',\n  fontSize: '12px',\n  display: 'block',\n  padding: '3px 20px',\n  clear: 'both',\n  fontWeight: '400',\n  '&:hover': {\n    color: '#262626',\n    backgroundColor: '#f5f5f5',\n  },\n});\n\nconst Paragraph = styled(Typography)({\n  color:'#757575',\n  fontSize:15\n});\n\n\nconst EditBtnWrapper = styled(Typography)({\n  cursor: 'pointer',\n  border: '1px solid #E7EAEC',\n  height: 31,\n  width: 31,\n  marginRight: '-1px',\n  position: 'relative',\n  borderTopLeftRadius: '3px',\n  borderBottomLeftRadius: '3px',\n  background: 'white',\n  '&:hover': {\n    background: '#e7eaec',\n  },\n  '& svg': {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    margin: 'auto',\n  },\n});\n\nconst StyledAddBtn = withStyles({\n  root:{\n    textTransform: \"none\", \n    marginBottom:12, \n    height:\"35px\", \n    fontSize:\"13px\"\n  }\n})(Button);\n\nconst AlertWrapper = styled(Box)({\n  marginBottom: 20,\n  marginTop: 20,\n});\n\nconst StyledAlert = withStyles({\n  root: { fontSize: '14px' },\n  filledWarning: {\n    color: '#8a6d3b',\n    backgroundColor: '#fcf8e3',\n    borderColor: '#faebcc',\n  },\n  icon: { color: '#f8ac59' },\n})(Alert);\n\nconst DialogContent = styled(MuiDialogContent)({\n  minHeight: 100,\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} style={{ maxWidth:750, margin:0, minWidth:'40%'}} />\n    </Draggable>\n  );\n}\n\nexport default function AppointmentModal(props) {\n  const { title, invoice_id, job_id, open, setOpen } = props;\n  \n  const [selectedInvoiceId, setSelectedInvoiceId] = useState(null);\n  const [selectedJob, setSelectedJob] = useState(false);\n  const [selectedJobID, setSelectedJobID] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [warning, setWarning] = useState('');\n\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    setSelectedJobID(null);\n    setSelectedInvoiceId(null);\n    invoice_id && setSelectedInvoiceId(invoice_id);\n    job_id && setSelectedJobID(job_id);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      {invoice_id && (\n        <Tooltip\n          title=\"Edit\"\n          placement=\"top\"\n          arrow\n          interactive\n          TransitionComponent={Fade}\n          title=\"Edit\"\n        >\n          <EditBtnWrapper\n            onClick={(event) => {\n              event.preventDefault();\n              event.stopPropagation();\n              handleClickOpen();\n            }}\n          >\n            <EditIcon fontSize=\"small\" />\n          </EditBtnWrapper>\n        </Tooltip>\n      )}\n\n      \n        {/* <JobInvoiceTyp onClick={handleClickOpen}>New Invoice</JobInvoiceTyp> */}\n\n        <StyledAddBtn\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={handleClickOpen}\n          startIcon={<AddIcon style={{fontSize:25}}/>}\n        >\n          Add an Appointment\n        </StyledAddBtn>\n\n      \n        <Dialog\n          fullScreen={fullScreen}\n          open={open}\n          onClose={handleClose}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"draggable-dialog-title\"\n        >\n          <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n            <NameWrapper>New Appointment\n              <Button onClick={handleClose} color=\"primary\"><CloseIcon/></Button>\n            </NameWrapper>\n          </DialogTitle>\n          \n            {/* <DialogContent>\n              <CircularProgressWrapper>\n                <CircularProgress />\n              </CircularProgressWrapper>\n            </DialogContent> */}\n            <>\n              <DialogContent dividers>\n                <Grid container spacing={1} >\n                  <JobStat\n                    label={'Active lead'}\n                    content={\n                      <LiveSearch\n                        // Placeholder=\"hamza\"\n                        selectedJob={selectedJob}\n                        onChange={setSelectedJobID}\n                        selectedItem={\n                          selectedJob.proposal\n                            ? selectedJob.proposal.name\n                            : false\n                        }\n                        // apiEndPoint={`${baseUrl}/jobs/get_json_job?term=`}\n                      />\n                    }\n                  />\n                  <React.Fragment>\n                    <AppointmentFields\n                      selectedJob={selectedJob}\n                      setWarning={setWarning}\n                      setSelectedJob={setSelectedJob}\n                    />\n                  </React.Fragment>\n                </Grid>\n                \n                  <CustomActionBar>\n                    <Button \n                      onClick={handleClose} \n                      color=\"primary\"\n                      style={{fontSize:\"14px\", fontWeight:\"bold\"}}\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      // onClick={handleSubmit}\n                      style={{fontSize:\"14px\", fontWeight:\"bold\"}}\n                      color=\"primary\"\n                      variant=\"contained\"\n                    >\n                      Save\n                    </Button>\n                  </CustomActionBar>\n              </DialogContent>\n            </>\n        </Dialog>\n    </ThemeProvider>\n  );\n}\n\nAppointmentModal.propTypes = {\n  name: PropTypes.string.isRequired, // this is passed from the Rails view\n  title: PropTypes.string.isRequired, // this is passed from the Rails view\n};\n\nAppointmentModal.defaultProps = {\n  name: 'Editing Invoice',\n  title: 'content',\n};\n","import React from \"react\";\nimport AppointmentModal from \"./components/AppointmentModal\"\nimport { Eventcalendar, getJson, snackbar, Popup, Input, Textarea, Switch, Datepicker, toast, setOptions, CalendarNav, SegmentedGroup, SegmentedItem, CalendarPrev, CalendarToday, CalendarNext } from '@mobiscroll/react';\nimport \"@mobiscroll/react/dist/css/mobiscroll.min.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Tooltip,\n    Dialog,\n    Grid,\n    Box,\n    styled,\n    Fade,\n    withStyles,\n    CircularProgress,\n    DialogContent as MuiDialogContent,\n    DialogContentText,\n    DialogTitle,\n    Paper,\n    Chip,\n    Typography,\n  } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme } from './config/material-ui/theme';\nimport Button from \"@material-ui/core/Button\";\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Card from '@material-ui/core/Card';\nimport {Modal} from \"@material-ui/core\";\nimport './App.css';\n\n\nconst AppointmentsHeader = styled(Box)({\n    display: 'flex',\n    justifyContent: 'space-between',\n    backgroundColor: '#fdfdfd',\n    borderColor: '#ebedef',\n    borderImage: 'none',\n    borderStyle: 'solid solid none',\n    borderWidth: '3px 0px 0px',\n    color: 'inherit',\n    marginBottom: '0',\n    padding: '14px 15px 7px',\n    minHeight: '48px',\n    fontFamily: '\"Lato\", \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n  });\n\n  const HeadingWrapper = styled(Typography)({\n    fontSize: '30px',\n    fontWeight: '100',\n    fontFamily: '\"Lato\", \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n  });\n  \n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: \"1480px\",\n      margin: 30,\n      marginLeft: '60px',\n      marginRight: '60px'\n    },\n    bullet: {\n      display: \"inline-block\",\n      margin: \"0 2px\",\n      transform: \"scale(0.8)\"\n    },\n    title: {\n      fontSize: 14\n    },\n    pos: {\n      marginBottom: 12\n    }\n  });\n  \n\n\nsetOptions({\n    theme: 'ios',\n    themeVariant: 'light'\n});\n\nconst now = new Date();\nconst defaultEvents = [{\n    id: 1,\n    start: new Date(now.getFullYear(), now.getMonth(), 8, 13),\n    end: new Date(now.getFullYear(), now.getMonth(), 8, 13, 30),\n    title: 'Lunch @ Butcher\\'s',\n    color: '#26c57d'\n}, {\n    id: 2,\n    start: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 15),\n    end: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 16),\n    title: 'General orientation',\n    color: '#fd966a'\n}, {\n    id: 3,\n    start: new Date(now.getFullYear(), now.getMonth(), now.getDate() - 1, 18),\n    end: new Date(now.getFullYear(), now.getMonth(), now.getDate() - 1, 22),\n    title: 'Dexter BD',\n    color: '#37bbe4'\n}, {\n    id: 4,\n    start: new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1, 10, 30),\n    end: new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1, 11, 30),\n    title: 'Stakeholder mtg.',\n    color: '#d00f0f'\n}];\n\nconst responsivePopup = {\n    medium: {\n        display: 'anchored',\n        width: 400,\n        fullScreen: false,\n        touchUi: false\n    }\n};\n\nfunction App() {\n    \n\n    const [view, setView] = React.useState('week');\n    const [Events, setEvents] = React.useState([]);\n    const [myEvents, setMyEvents] = React.useState(defaultEvents);\n    const [tempEvent, setTempEvent] = React.useState(null);\n    // const [isOpen, setOpen] = React.useState(false);\n    const [isEdit, setEdit] = React.useState(false);\n    const [anchor, setAnchor] = React.useState(null);\n    const [start, startRef] = React.useState(null);\n    const [end, endRef] = React.useState(null);\n    const [popupEventTitle, setTitle] = React.useState('');\n    const [popupEventDescription, setDescription] = React.useState('');\n    const [popupEventAllDay, setAllDay] = React.useState(true);\n    const [popupEventDate, setDate] = React.useState([]);\n    const [popupEventStatus, setStatus] = React.useState('busy');\n    const [mySelectedDate, setSelectedDate] = React.useState(now);\n\n    const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n \n\n\n    const saveEvent = React.useCallback(() => {\n        const newEvent = {\n            id: tempEvent.id,\n            title: popupEventTitle,\n            description: popupEventDescription,\n            start: popupEventDate[0],\n            end: popupEventDate[1],\n            allDay: popupEventAllDay,\n            status: popupEventStatus,\n            color: tempEvent.color\n        };\n        if (isEdit) {\n            // update the event in the list\n            const index = myEvents.findIndex(x => x.id === tempEvent.id);;\n            const newEventList = [...myEvents];\n\n            newEventList.splice(index, 1, newEvent);\n            setMyEvents(newEventList);\n            // here you can update the event in your storage as well\n            // ...\n        } else {\n            // add the new event to the list\n            setMyEvents([...myEvents, newEvent]);\n            // here you can add the event to your storage as well\n            // ...\n        }\n        setSelectedDate(popupEventDate[0]);\n        // close the popup\n        setOpen(false);\n    }, [isEdit, myEvents, popupEventAllDay, popupEventDate, popupEventDescription, popupEventStatus, popupEventTitle, tempEvent]);\n\n    const deleteEvent = React.useCallback((event) => {\n        setMyEvents(myEvents.filter(item => item.id !== event.id));\n        setTimeout(() => {\n            snackbar({\n                button: {\n                    action: () => {\n                        setMyEvents(prevEvents => [...prevEvents, event]);\n                    },\n                    text: 'Undo'\n                },\n                message: 'Event deleted'\n            });\n        });\n    }, [myEvents]);\n\n    const loadPopupForm = React.useCallback((event) => {\n        setTitle(event.title);\n        setDescription(event.description);\n        setDate([event.start, event.end]);\n        setAllDay(event.allDay || false);\n        setStatus(event.status || 'busy');\n    }, []);\n\n    // handle popup form changes\n\n    const titleChange = React.useCallback((ev) => {\n        setTitle(ev.target.value);\n    }, []);\n\n    const descriptionChange = React.useCallback((ev) => {\n        setDescription(ev.target.value);\n    }, []);\n\n    const allDayChange = React.useCallback((ev) => {\n        setAllDay(ev.target.checked);\n    }, []);\n\n    const dateChange = React.useCallback((args) => {\n        setDate(args.value);\n    }, []);\n\n    const statusChange = React.useCallback((ev) => {\n        setStatus(ev.target.value);\n    }, []);\n\n    const onDeleteClick = React.useCallback(() => {\n        deleteEvent(tempEvent);\n        setOpen(false);\n    }, [deleteEvent, tempEvent]);\n\n    // scheduler options\n\n    const onSelectedDateChange = React.useCallback((event) => {\n        setSelectedDate(event.date);\n    }, []);\n\n    const onEventClick = React.useCallback((args) => {\n        setEdit(true);\n        setTempEvent({ ...args.event });\n        // fill popup form with event data\n        loadPopupForm(args.event);\n        setAnchor(args.domEvent.target);\n        // setOpen(true);\n        handleOpen();\n    }, [loadPopupForm]);\n\n    const onEventCreated = React.useCallback((args) => {\n        setEdit(false);\n        setTempEvent(args.event)\n        // fill popup form with event data\n        loadPopupForm(args.event);\n        setAnchor(args.target);\n        // open the popup\n        // setOpen(true);\n        handleOpen();\n    }, [loadPopupForm]);\n\n    const onEventDeleted = React.useCallback((args) => {\n        deleteEvent(args.event)\n    }, [deleteEvent]);\n\n    const onEventUpdated = React.useCallback((args) => {\n        // here you can update the event in your storage as well, after drag & drop or resize\n        // ...\n    }, []);\n\n    // datepicker options\n    const controls = React.useMemo(() => popupEventAllDay ? ['date'] : ['datetime'], [popupEventAllDay]);\n    const responsiveOptions = React.useMemo(() => popupEventAllDay ? {\n        medium: {\n            controls: ['calendar'],\n            touchUi: false\n        }\n    } : {\n            medium: {\n                controls: ['calendar', 'time'],\n                touchUi: false\n            }\n        }, [popupEventAllDay]);\n\n    // popup options\n    const headerText = React.useMemo(() => isEdit ? 'Edit event' : 'New Event', [isEdit]);\n    const popupButtons = React.useMemo(() => {\n        if (isEdit) {\n            return ['cancel', {\n                handler: () => {\n                    saveEvent();\n                },\n                keyCode: 'enter',\n                text: 'Save',\n                cssClass: 'mbsc-popup-button-primary'\n            }];\n        } else {\n            return ['cancel', {\n                handler: () => {\n                    saveEvent();\n                },\n                keyCode: 'enter',\n                text: 'Add',\n                cssClass: 'mbsc-popup-button-primary'\n            }];\n        }\n    }, [isEdit, saveEvent]);\n\n    const onClose = React.useCallback(() => {\n        if (!isEdit) {\n            // refresh the list, if add popup was canceled, to remove the temporary event\n            setMyEvents([...myEvents]);\n        }\n        setOpen(false);\n    }, [isEdit, myEvents]);\n\n    \n\n    React.useEffect(() => {\n        getJson('https://trial.mobiscroll.com/events/?vers=5', (events) => {\n            setEvents(events);\n        }, 'jsonp');\n    }, []);\n\n    React.useEffect(() => {\n        getJson('https://trial.mobiscroll.com//workday-events/?vers=5', (events) => {\n          setEvents(events);\n      }, 'jsonp');\n    }, []);\n\n    const [calView, setCalView] = React.useState(\n        {\n            schedule: { type: 'week' }\n        }\n    );\n\n    const changeView = (event) => {\n        let calView;\n        \n        switch (event.target.value) {\n            case 'month':\n                calView = {\n                    calendar: { labels: true }\n                }\n                break;\n            case 'week':\n                calView = {\n                    schedule: { type: 'week' }\n                }\n                break;\n            case 'day':\n                calView = {\n                    schedule: { type: 'day' }\n                }\n                break;\n        }\n\n        setView(event.target.value);\n        setCalView(calView);\n    }\n    \n    const customWithNavButtons = () => {\n      return <React.Fragment>\n        <CalendarNav className=\"cal-header-nav\" />\n        <div className=\"cal-header-picker\">\n          <SegmentedGroup value={view} onChange={changeView}>\n            <SegmentedItem value=\"month\" style={{height:\"50px\"}}>\n              <div style={{width:\"60px\", height:\"30px\", marginTop:\"4px\"}}>\n                Month\n              </div>\n            </SegmentedItem>\n            <SegmentedItem value=\"week\" >\n              <div style={{width:\"60px\", height:\"30px\", marginTop:\"4px\"}}>\n                Week\n              </div>\n            </SegmentedItem>\n            <SegmentedItem value=\"day\" style={{width:\"80px\"}}>\n              <div style={{width:\"60px\", height:\"30px\", marginTop:\"4px\"}}>\n                Day\n              </div>\n            </SegmentedItem>\n          </SegmentedGroup>\n        </div>\n        <div style= {{width: '100%',display: 'flex',justifyContent: 'flex-end'}}>\n          <CalendarPrev className=\"cal-header-prev\" />\n          <CalendarToday className=\"cal-header-today\" />\n          <CalendarNext className=\"cal-header-next\" />\n        </div>\n      </React.Fragment>;\n    }\n\n    return (\n      <ThemeProvider theme={theme}>\n        <div className=\"md-switching-view-cont\" style={{background: \"#CCCCCC\"}}>\n            <Card className={classes.root} variant=\"outlined\">\n                <AppointmentsHeader>\n                    <HeadingWrapper className=\"title\">Appointments</HeadingWrapper>\n                    <div>\n                        <AppointmentModal open={open} setOpen={setOpen}/>\n                        <Button color=\"primary\" style={{marginLeft:'5px', marginBottom:'10px'}}><SettingsIcon style={{width:\"20px\", height: '25px'}}/></Button>\n                    </div>\n                </AppointmentsHeader>\n                <Eventcalendar\n                theme=\"ios\" \n                themeVariant=\"light\"\n                dragToMove={true}\n                dragToResize={true}\n                data={myEvents}\n                view={view}\n                clickToCreate=\"double\"\n                dragToCreate={true}\n                selectedDate={mySelectedDate}\n                onSelectedDateChange={onSelectedDateChange}\n                onEventClick={onEventClick}\n                onEventCreated={onEventCreated}\n                onEventDeleted={onEventDeleted}\n                onEventUpdated={onEventUpdated}\n                renderHeader={customWithNavButtons}\n                height={750}\n                view={calView}\n                />\n                {/*\n                <div className=\"mbsc-form-group\">\n                    <Input label=\"Title\" value={popupEventTitle} onChange={titleChange} />\n                    <Textarea label=\"Description\" value={popupEventDescription} onChange={descriptionChange} />\n                </div>\n                <div className=\"mbsc-form-group\">\n                    <Switch label=\"All-day\" checked={popupEventAllDay} onChange={allDayChange} />\n                    <Input ref={startRef} label=\"Starts\" />\n                    <Input ref={endRef} label=\"Ends\" />\n                    <Datepicker\n                        select=\"range\"\n                        controls={controls}\n                        touchUi={true}\n                        startInput={start}\n                        endInput={end}\n                        showRangeLabels={false}\n                        responsive={responsiveOptions}\n                        onChange={dateChange}\n                        value={popupEventDate}\n                    />\n                    <SegmentedGroup onChange={statusChange}>\n                        <SegmentedItem value=\"busy\" checked={popupEventStatus === 'busy'}>Show as busy</SegmentedItem>\n                        <SegmentedItem value=\"free\" checked={popupEventStatus === 'free'}>Show as free</SegmentedItem>\n                    </SegmentedGroup>\n                    {isEdit && <div className=\"mbsc-button-group\">\n                        <Button className=\"mbsc-button-block\" color=\"danger\" variant=\"outline\" onClick={onDeleteClick}>Delete event</Button>\n                    </div>}\n                </div> */}\n            </Card>\n            \n        </div>\n      </ThemeProvider>\n    ); \n}\n\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}