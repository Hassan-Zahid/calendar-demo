{"version":3,"sources":["components/JobStat.jsx","config/material-ui/theme.js","components/LiveSearch.jsx","components/InvoiceDetails.jsx","components/InvoiceForm.jsx","components/InvoiceModal.jsx","App.js","reportWebVitals.js","index.js"],"names":["StyledDialogContentText","withStyles","root","marginBottom","fontSize","DialogContentText","TextWrapper","styled","Box","height","display","alignItems","justifyContent","wordBreak","color","JobStat","label","content","Fragment","Grid","item","xs","theme","createMuiTheme","typography","palette","primary","main","StyledAutocomplete","paper","Autocomplete","LiveSearch","props","selectedJob","selectedItem","onChange","apiEndPoint","useState","searchTerm","setSearchTerm","React","open","setOpen","doSearch","setDoSearch","options","setOptions","keyPress","e","keyCode","useEffect","a","fetch","response","json","data","getOptionLabel","option","name","reason","id","size","onOpen","onClose","loading","disabled","renderOption","inputValue","matches","match","parts","parse","map","part","index","style","highlight","text","renderInput","params","TextField","autoFocus","target","value","variant","InputProps","endAdornment","CircularProgress","onKeyDown","makeStyles","width","heading","flexBasis","flexShrink","paddingTop","paddingRight","secondaryHeading","secondary","StyledOutlinedInput","input","marginTop","OutlinedInput","useStyles","flexWrap","margin","textField","InvoiceForm","classes","setSelectedJob","setWarning","container","Typography","FormControl","fullWidth","className","noValidate","type","defaultValue","InputLabelProps","shrink","Checkbox","checked","CustomActionBar","NameWrapper","MarginWrapper","textAlign","EditBtnWrapper","cursor","borderRadius","lineHeight","padding","clear","fontWeight","backgroundColor","float","border","marginRight","position","borderTopLeftRadius","borderBottomLeftRadius","background","top","right","bottom","left","Button","MUIButton","NewInvoiceBtn","filledWarning","borderColor","icon","Alert","fontFamily","DialogContent","MuiDialogContent","minHeight","PaperComponent","handle","cancel","Paper","maxWidth","minWidth","InvoiceModal","title","invoice_id","job_id","setSelectedInvoiceId","setSelectedJobID","handleClickOpen","handleClose","ThemeProvider","Tooltip","placement","arrow","interactive","TransitionComponent","Fade","onClick","event","preventDefault","stopPropagation","Dialog","aria-labelledby","DialogTitle","dividers","proposal","defaultProps","AppointmentsHeader","borderImage","borderStyle","borderWidth","HeadingWrapper","rand","Math","round","random","getModalStyle","transform","bullet","pos","themeVariant","now","Date","defaultEvents","start","getFullYear","getMonth","end","getDate","viewSettings","schedule","App","view","setView","setEvents","myEvents","setMyEvents","tempEvent","setTempEvent","isEdit","setEdit","setAnchor","popupEventTitle","setTitle","popupEventDescription","setDescription","popupEventAllDay","setAllDay","popupEventDate","setDate","popupEventStatus","setStatus","mySelectedDate","setSelectedDate","handleOpen","saveEvent","useCallback","newEvent","description","allDay","status","findIndex","x","newEventList","splice","deleteEvent","filter","setTimeout","snackbar","button","action","prevEvents","message","loadPopupForm","onSelectedDateChange","ev","args","date","onEventClick","domEvent","onEventCreated","onEventDeleted","onEventUpdated","useMemo","medium","controls","touchUi","handler","cssClass","getJson","events","calendar","labels","calView","setCalView","changeView","Card","dragToMove","dragToResize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c09b93ae.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Grid,\n  Box,\n  styled,\n  withStyles,\n  DialogContentText,\n} from '@material-ui/core';\n\nconst StyledDialogContentText = withStyles({\n  root: {\n    marginBottom: 5,\n    fontSize: 16,\n  },\n})(DialogContentText);\n\nconst TextWrapper = styled(Box)({\n  height: '100%',\n  fontSize: '16px',\n  marginBottom: '10px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  wordBreak: 'break-all',\n  '& > p': {\n    color: '#333333',\n  },\n});\n\nexport const JobStat = ({ label, content }) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={4}>\n        <TextWrapper>\n          <StyledDialogContentText>{label}</StyledDialogContentText>\n        </TextWrapper>\n      </Grid>\n      <Grid item xs={1} />\n      <Grid item xs={7}>\n        {' '}\n        <StyledDialogContentText>{content}</StyledDialogContentText>\n      </Grid>\n    </React.Fragment>\n  );\n};\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n  typography: {\n    fontSize: 20,\n  },\n  palette: {\n    primary: {\n      main: '#1488FC',\n    },\n  },\n});\n","import React, { useEffect, useState } from 'react';\nimport {TextField, withStyles} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst StyledAutocomplete = withStyles({\n    paper:{\n        fontSize:16\n    },\n    root:{\n        '& .MuiInputBase-input':{ fontSize:16}\n    }\n})(Autocomplete)\n\n\n\nexport default function LiveSearch(props) {\n  const { selectedJob, selectedItem, onChange, apiEndPoint } = props;\n  const [searchTerm, setSearchTerm] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const [doSearch, setDoSearch] = useState(false);\n  const [options, setOptions] = useState([]);\n\n  const keyPress = (e) => {\n    if (e.keyCode == 13) {\n      setDoSearch(true);\n    }\n  };\n\n  useEffect(() => {\n    if (doSearch) {\n      (async () => {\n        const response = await fetch(`${apiEndPoint}${searchTerm}`);\n        const data = await response.json();\n        setOptions(data);\n        setDoSearch(false);\n      })();\n    }\n  }, [doSearch]);\n\n  useEffect(() => {\n    if (selectedItem) {\n      setSearchTerm(selectedItem);\n    }\n  }, [selectedJob]);\n\n  return (\n    <StyledAutocomplete\n      options={options}\n      getOptionLabel={(option) => option.name}\n      onChange={(e, reason) => {\n        onChange(reason ? reason.id : null);\n        setSearchTerm(reason ? reason.name : '');\n      }}\n      size=\"small\"\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      loading={doSearch}\n      disabled={selectedItem && true}\n      renderOption={(option, { inputValue }) => {\n        const matches = match(option.name, inputValue);\n        const parts = parse(option.name, matches);\n        return (\n          <div>\n            {parts.map((part, index) => {\n              return (\n                <span\n                  key={index}\n                  style={{ ...(part.highlight && { color: '#1488FC' }) }}\n                >\n                  {part.text}\n                </span>\n              );\n            })}\n          </div>\n        );\n      }}\n      inputValue={searchTerm}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          {...(!selectedItem && { label: 'Type and hit enter to search' })}\n          autoFocus={!open}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          variant=\"outlined\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {doSearch ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n          onKeyDown={keyPress}\n        />\n      )}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Accordion, Grid } from '@material-ui/core';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: 16,\n    flexBasis: '43.5%',\n    color: '#333333',\n    flexShrink: 0,\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingRight: 55,\n    wordBreak: 'break-all',\n  },\n  secondaryHeading: {\n    fontSize: 16,\n    color: theme.palette.text.secondary,\n    paddingTop: 10,\n  },\n}));\n\nexport default function InvoiceDetails(props) {\n  const { selectedJob } = props;\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root}>\n      {/* {selectedJob.invoice.amount > 0 && (\n        <Accordion\n          expanded={expanded === 'panel1'}\n          onChange={handleChange('panel1')}\n        >\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1bh-content\"\n            id=\"panel1bh-header\"\n          >\n            <Typography className={classes.heading}>\n              Current Invoice Amount\n            </Typography>\n            <Typography className={classes.secondaryHeading}>\n              {selectedJob.invoice.amount}\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Typography className={classes.secondaryHeading}>\n              This shows the current invoice amount.\n            </Typography>\n          </AccordionDetails>\n        </Accordion>\n      )} */}\n\n      <Accordion\n        expanded={expanded === 'panel2'}\n        onChange={handleChange('panel2')}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2bh-content\"\n          id=\"panel2bh-header\"\n        >\n          <Typography className={classes.heading}>\n            Total Invoiced Amount\n          </Typography>\n          <Typography className={classes.secondaryHeading}>\n            {/* {selectedJob.invoices.invoiced_amount} */}\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography className={classes.secondaryHeading}>\n            The total of invoiced amount on the job.\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === 'panel3'}\n        onChange={handleChange('panel3')}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel3bh-content\"\n          id=\"panel3bh-header\"\n        >\n          <Typography className={classes.heading}>\n            Un-Invoiced Amount\n          </Typography>\n          <Typography className={classes.secondaryHeading}>\n            {/* {selectedJob.invoices.uninvoiced_amount} */}\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography className={classes.secondaryHeading}>\n            The total of un-invoiced amount left on the job.\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === 'panel4'}\n        onChange={handleChange('panel4')}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel4bh-content\"\n          id=\"panel4bh-header\"\n        >\n          <Typography className={classes.heading}>Total Payement</Typography>\n          <Typography className={classes.secondaryHeading}>\n            {/* {Object.entries(selectedJob).length < 1\n              ? ''\n              : selectedJob.payments.totalPayments} */}\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Grid container>\n            <Grid item xs={5}>\n              <Typography className={classes.heading}>\n                Invoiced Payments\n              </Typography>\n            </Grid>\n\n            <Grid item xs={5}>\n              <Typography className={classes.secondaryHeading}>\n                {/* {Object.entries(selectedJob).length < 1\n                  ? ''\n                  : selectedJob.payments.invoiced_payments} */}\n              </Typography>\n            </Grid>\n            <Grid item xs={5}>\n              <Typography className={classes.heading}>\n                Individual Payments\n              </Typography>\n            </Grid>\n            <Grid item xs={5}>\n              <Typography className={classes.secondaryHeading}>\n                {/* {Object.entries(selectedJob).length < 1\n                  ? ''\n                  : selectedJob.payments.individual_payments} */}\n              </Typography>\n            </Grid>\n            <Typography className={classes.secondaryHeading}>\n              {' '}\n              The total amount of payments received on the job.\n            </Typography>\n          </Grid>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport CurrencyTextField from '@unicef/material-ui-currency-textfield';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport {\n  Grid,\n  Box,\n  styled,\n  Typography,\n  withStyles,\n  InputAdornment,\n  FormControl,\n} from '@material-ui/core';\n\nconst TextWrapper = styled(Box)({\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  wordBreak: 'break-all',\n  fontSize: '16px',\n  '& > p': {\n    color: '#333333',\n    fontSize: 16,\n  },\n});\n\nconst StyledOutlinedInput = withStyles({\n  input: {\n    fontSize: 16,\n    marginBottom: 30,\n    marginTop: 30,\n  },\n})(OutlinedInput);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    marginBottom: 25,\n    marginTop: 25,\n  },\n  textField: {\n    width: '25ch',\n  },\n}));\n\nconst InvoiceForm = (props) => {\n  const classes = useStyles();\n  const { selectedJob, setSelectedJob, setWarning } = props;\n\n  return (\n    <Grid container>\n      \n      <Grid item xs={4}>\n        <TextWrapper>\n          <Typography>Users</Typography>\n        </TextWrapper>\n      </Grid>\n      <Grid item xs={1} />\n      <Grid item xs={7}>\n        <FormControl fullWidth className={classes.margin} variant=\"outlined\">\n            <StyledOutlinedInput\n              style={{ width: 400, height: 50}}\n              size=\"large\"\n              id=\"outlined-adornment-amount\"\n            />\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={4}>\n        <TextWrapper>\n          <Typography>Service Areas</Typography>\n        </TextWrapper>\n      </Grid>\n      <Grid item xs={1} />\n      <Grid item xs={7}>\n        <FormControl fullWidth className={classes.margin} variant=\"outlined\">\n          <StyledOutlinedInput\n            style={{ width: 400, height: 50}}\n            size=\"large\"\n            id=\"outlined-adornment-amount\"\n          />\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={4}>\n        <TextWrapper>\n          <Typography>Start time</Typography>\n        </TextWrapper>\n      </Grid>\n      <Grid item xs={1} />\n      <Grid item xs={7}>\n        <FormControl fullWidth className={classes.margin} variant=\"outlined\">\n          <form className={classes.container} noValidate>\n          <StyledOutlinedInput\n            style={{ width: 400, height: 50}}\n            size=\"large\"\n            id=\"outlined-adornment-amount\"\n            type=\"datetime-local\"\n            defaultValue=\"2017-05-24T10:30\"\n            className={classes.textField}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          </form>\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={4}>\n        <TextWrapper>\n          <Typography>End time</Typography>\n        </TextWrapper>\n      </Grid>\n      <Grid item xs={1} />\n      <Grid item xs={7}>\n          <form className={classes.container} noValidate>\n            <StyledOutlinedInput\n              style={{ width: 400, height: 50}}\n              size=\"large\"\n              id=\"outlined-adornment-amount\"\n              type=\"datetime-local\"\n              defaultValue=\"2017-05-24T10:30\"\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </form>\n      </Grid>\n\n      <Grid item xs={4}>\n        <TextWrapper>\n          <Typography>Recurring</Typography>\n        </TextWrapper>\n      </Grid>\n      <Grid item xs={1} />\n      <Grid item xs={7}>\n        <FormControl fullWidth className={classes.margin} variant=\"outlined\">\n          <Checkbox\n            checked=\"true\"\n            // onChange={handleChange}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={4}>\n        <TextWrapper>\n          <Typography> New Note</Typography>\n        </TextWrapper>\n      </Grid>\n      <Grid item xs={1} />\n      <Grid item xs={7}>\n        <StyledOutlinedInput\n          style={{ width: 300, height: 100 }}\n          size=\"large\"\n          id=\"outlined-adornment-amount\"\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default InvoiceForm;\n","import React, { useEffect, useState } from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Button as MUIButton,\n  Tooltip,\n  Dialog,\n  Grid,\n  Box,\n  styled,\n  Fade,\n  withStyles,\n  CircularProgress,\n  DialogContent as MuiDialogContent,\n  DialogContentText,\n  DialogTitle,\n  Paper,\n  Chip,\n  Typography,\n} from '@material-ui/core';\n\nimport { JobStat } from './JobStat';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme } from '../config/material-ui/theme';\nimport Draggable from 'react-draggable';\nimport LiveSearch from './LiveSearch';\nimport InvoiceDetails from './InvoiceDetails';\nimport Alert from '@material-ui/lab/Alert';\nimport InvoiceForm from './InvoiceForm';\n\n// const baseUrl = `${location.protocol}//${location.host}`;\n\nconst CustomActionBar = styled(Box)({\n  marginTop: 40,\n  display: 'flex',\n  justifyContent: 'flex-end',\n});\n\nconst CircularProgressWrapper = styled(Box)({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n});\n\nconst NameWrapper = styled(Box)({\n  fontSize: '18px',\n});\n\nconst MarginWrapper = styled(Box)({\n  height: 25,\n  textAlign: 'end',\n  marginBottom:'20px',\n  width: '100%',\n});\n\nconst JobInvoiceTyp = styled(Typography)({\n  cursor: 'pointer',\n  borderRadius: '3px',\n  lineHeight: '2.3',\n  margin: '4px',\n  textAlign: 'left',\n  fontSize: '12px',\n  display: 'block',\n  padding: '3px 20px',\n  clear: 'both',\n  fontWeight: '400',\n  '&:hover': {\n    color: '#262626',\n    backgroundColor: '#f5f5f5',\n  },\n});\n\nconst Paragraph = styled(Typography)({\n  fontSize: '50px',\n  float: 'right'\n});\n\n\nconst EditBtnWrapper = styled(Typography)({\n  cursor: 'pointer',\n  border: '1px solid #E7EAEC',\n  height: 31,\n  width: 31,\n  marginRight: '-1px',\n  position: 'relative',\n  borderTopLeftRadius: '3px',\n  borderBottomLeftRadius: '3px',\n  background: 'white',\n  '&:hover': {\n    background: '#e7eaec',\n  },\n  '& svg': {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    margin: 'auto',\n  },\n});\n\nconst AlertWrapper = styled(Box)({\n  marginBottom: 20,\n  marginTop: 20,\n});\n\nconst Button = styled(MUIButton)({});\n\nconst StyledAlert = withStyles({\n  root: { fontSize: '14px' },\n  filledWarning: {\n    color: '#8a6d3b',\n    backgroundColor: '#fcf8e3',\n    borderColor: '#faebcc',\n  },\n  icon: { color: '#f8ac59' },\n})(Alert);\n\nconst NewInvoiceBtn = withStyles({\n  root: {\n    fontSize: '13px',\n    fontFamily: '\"Lato\", \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n\n  },\n})(Button);\n\nconst DialogContent = styled(MuiDialogContent)({\n  minHeight: 100,\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} style={{ maxWidth: '750px', minWidth: 750 }} />\n    </Draggable>\n  );\n}\n\nexport default function InvoiceModal(props) {\n  const { title, invoice_id, job_id } = props;\n  const [open, setOpen] = useState(false);\n  const [selectedInvoiceId, setSelectedInvoiceId] = useState(null);\n  const [selectedJob, setSelectedJob] = useState(false);\n  const [selectedJobID, setSelectedJobID] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [warning, setWarning] = useState('');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    setSelectedJobID(null);\n    setSelectedInvoiceId(null);\n    invoice_id && setSelectedInvoiceId(invoice_id);\n    job_id && setSelectedJobID(job_id);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // useEffect(() => {\n  //   if (selectedJobID) {\n  //     (async () => {\n  //       const response = await fetch(\n  //         `${baseUrl}/jobs/get_job_details_api?job=${selectedJobID}`\n  //       );\n  //       const secondData = await response.json();\n  //       setSelectedJob(secondData.data);\n  //     })();\n  //   }\n  // }, [selectedJobID]);\n\n  // useEffect(() => {\n  //   if (selectedInvoiceId) {\n  //     (async () => {\n  //       setLoading(true);\n  //       const response = await fetch(\n  //         `${baseUrl}/jobs/get_job_details_api?invoice=${selectedInvoiceId}`\n  //       );\n  //       const data = await response.json();\n  //       setSelectedJob(data.data);\n  //       setLoading(false);\n  //     })();\n  //   }\n  // }, [selectedInvoiceId]);\n\n  // const handleSubmit = () => {\n  //   if (\n  //     parseInt(selectedJob.invoices.remaining_amount) == 0 ||\n  //     selectedJob.invoice.amount == 0\n  //   ) {\n  //     alert.error(\"Can't create invoice with $0.00 amount\");\n  //   } else if (\n  //     parseInt(selectedJob.invoice.amount) <=\n  //     parseInt(selectedJob.invoices.remaining_amount)\n  //   ) {\n  //     setWarning('');\n  //     if (selectedInvoiceId) {\n  //       ajax({\n  //         url: `${baseUrl}/update_invoice/${selectedInvoiceId}`,\n  //         method: 'PUT',\n  //         data: {\n  //           amount: selectedJob.invoice.amount,\n  //           description: selectedJob.invoice.description,\n  //         },\n  //         success: (data) => {\n  //           if (data) {\n  //             alert.error(data.error);\n  //           } else {\n  //             window.location.reload();\n  //             setOpen(false);\n  //           }\n  //         },\n  //         fail: (response) => {\n  //           alert.error(response.error);\n  //         },\n  //       });\n  //     } else {\n  //       $.ajax({\n  //         url: `${baseUrl}/jobs/${selectedJobID}/send_invoice_api`,\n  //         method: 'POST',\n  //         data: {\n  //           amount: selectedJob.invoice.amount,\n  //           description: selectedJob.invoice.description,\n  //         },\n  //         success: (data) => {\n  //           if (data) {\n  //             alert.error(data.error);\n  //           } else {\n  //             window.location.reload();\n  //             setOpen(false);\n  //           }\n  //         },\n  //         fail: (response) => {\n  //           alert.error(response.error);\n  //         },\n  //       });\n  //     }\n  //   } else {\n  //     setWarning(\n  //       `Please enter Amount less than ${selectedJob.invoices.remaining_amount}`\n  //     );\n  //   }\n  // };\n\n  return (\n    <ThemeProvider theme={theme}>\n      {invoice_id && (\n        <Tooltip\n          title=\"Edit\"\n          placement=\"top\"\n          arrow\n          interactive\n          TransitionComponent={Fade}\n          title=\"Edit\"\n        >\n          <EditBtnWrapper\n            onClick={(event) => {\n              event.preventDefault();\n              event.stopPropagation();\n              handleClickOpen();\n            }}\n          >\n            <EditIcon fontSize=\"small\" />\n          </EditBtnWrapper>\n        </Tooltip>\n      )}\n\n      \n        {/* <JobInvoiceTyp onClick={handleClickOpen}>New Invoice</JobInvoiceTyp> */}\n\n      \n        <NewInvoiceBtn\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleClickOpen}\n        >\n          <AddOutlinedIcon/>\n          Add An Appointment\n        </NewInvoiceBtn>\n\n      \n        <Dialog\n          open={open}\n          onClose={handleClose}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"draggable-dialog-title\"\n        >\n          <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n            <NameWrapper>New Appointment</NameWrapper>\n          </DialogTitle>\n          \n            {/* <DialogContent>\n              <CircularProgressWrapper>\n                <CircularProgress />\n              </CircularProgressWrapper>\n            </DialogContent> */}\n            <>\n              <DialogContent dividers>\n                <Grid container>\n                  <JobStat\n                    label={'Active lead'}\n                    content={\n                      <LiveSearch\n                        selectedJob={selectedJob}\n                        onChange={setSelectedJobID}\n                        selectedItem={\n                          selectedJob.proposal\n                            ? selectedJob.proposal.name\n                            : false\n                        }\n                        // apiEndPoint={`${baseUrl}/jobs/get_json_job?term=`}\n                      />\n                    }\n                  />\n                  <MarginWrapper>Leave blank to create an availability</MarginWrapper>\n\n                      \n\n                    <React.Fragment>\n                      <InvoiceForm\n                        selectedJob={selectedJob}\n                        setWarning={setWarning}\n                        setSelectedJob={setSelectedJob}\n                      />\n                    </React.Fragment>\n                </Grid>\n                  <CustomActionBar>\n                    <NewInvoiceBtn onClick={handleClose} color=\"primary\">\n                      Cancel\n                    </NewInvoiceBtn>\n\n                      {/* <NewInvoiceBtn\n                        // onClick={handleSubmit}\n                        color=\"primary\"\n                        variant=\"contained\"\n                      >\n                        Update Invoice\n                      </NewInvoiceBtn> */}\n                      <NewInvoiceBtn\n                        // onClick={handleSubmit}\n                        color=\"primary\"\n                        variant=\"contained\"\n                      >\n                        Save\n                      </NewInvoiceBtn>\n                  </CustomActionBar>\n              </DialogContent>\n            </>\n        </Dialog>\n    </ThemeProvider>\n  );\n}\n\nInvoiceModal.propTypes = {\n  name: PropTypes.string.isRequired, // this is passed from the Rails view\n  title: PropTypes.string.isRequired, // this is passed from the Rails view\n};\n\nInvoiceModal.defaultProps = {\n  name: 'Editing Invoice',\n  title: 'content',\n};\n","import React from \"react\";\nimport InvoiceModal from \"./components/InvoiceModal\"\nimport { Eventcalendar, getJson, snackbar, Popup, Button, Input, Textarea, Switch, Datepicker, toast, setOptions, CalendarNav, SegmentedGroup, SegmentedItem, CalendarPrev, CalendarToday, CalendarNext } from '@mobiscroll/react';\nimport \"@mobiscroll/react/dist/css/mobiscroll.min.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Button as MUIButton,\n    Tooltip,\n    Dialog,\n    Grid,\n    Box,\n    styled,\n    Fade,\n    withStyles,\n    CircularProgress,\n    DialogContent as MuiDialogContent,\n    DialogContentText,\n    DialogTitle,\n    Paper,\n    Chip,\n    Typography,\n  } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport {Modal} from \"@material-ui/core\";\nimport './App.css';\n\n\nconst AppointmentsHeader = styled(Box)({\n    display: 'flex',\n    justifyContent: 'space-between',\n    backgroundColor: '#fdfdfd',\n    borderColor: '#ebedef',\n    borderImage: 'none',\n    borderStyle: 'solid solid none',\n    borderWidth: '3px 0px 0px',\n    color: 'inherit',\n    marginBottom: '0',\n    padding: '14px 15px 7px',\n    minHeight: '48px',\n    fontFamily: '\"Lato\", \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n  });\n\n  const HeadingWrapper = styled(Typography)({\n    fontSize: '30px',\n    fontWeight: '100',\n    fontFamily: '\"Lato\", \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n  });\n  \n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles({\n    root: {\n      minWidth: 500,\n      margin:30\n    },\n    bullet: {\n      display: \"inline-block\",\n      margin: \"0 2px\",\n      transform: \"scale(0.8)\"\n    },\n    title: {\n      fontSize: 14\n    },\n    pos: {\n      marginBottom: 12\n    }\n  });\n  \n\n\nsetOptions({\n    theme: 'ios',\n    themeVariant: 'light'\n});\n\nconst now = new Date();\nconst defaultEvents = [{\n    id: 1,\n    start: new Date(now.getFullYear(), now.getMonth(), 8, 13),\n    end: new Date(now.getFullYear(), now.getMonth(), 8, 13, 30),\n    title: 'Lunch @ Butcher\\'s',\n    color: '#26c57d'\n}, {\n    id: 2,\n    start: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 15),\n    end: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 16),\n    title: 'General orientation',\n    color: '#fd966a'\n}, {\n    id: 3,\n    start: new Date(now.getFullYear(), now.getMonth(), now.getDate() - 1, 18),\n    end: new Date(now.getFullYear(), now.getMonth(), now.getDate() - 1, 22),\n    title: 'Dexter BD',\n    color: '#37bbe4'\n}, {\n    id: 4,\n    start: new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1, 10, 30),\n    end: new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1, 11, 30),\n    title: 'Stakeholder mtg.',\n    color: '#d00f0f'\n}];\nconst viewSettings = {\n    schedule: { type: 'week' }\n};\nconst responsivePopup = {\n    medium: {\n        display: 'anchored',\n        width: 400,\n        fullScreen: false,\n        touchUi: false\n    }\n};\n\nfunction App() {\n    \n\n    const [view, setView] = React.useState('week');\n    const [Events, setEvents] = React.useState([]);\n    const [myEvents, setMyEvents] = React.useState(defaultEvents);\n    const [tempEvent, setTempEvent] = React.useState(null);\n    // const [isOpen, setOpen] = React.useState(false);\n    const [isEdit, setEdit] = React.useState(false);\n    const [anchor, setAnchor] = React.useState(null);\n    const [start, startRef] = React.useState(null);\n    const [end, endRef] = React.useState(null);\n    const [popupEventTitle, setTitle] = React.useState('');\n    const [popupEventDescription, setDescription] = React.useState('');\n    const [popupEventAllDay, setAllDay] = React.useState(true);\n    const [popupEventDate, setDate] = React.useState([]);\n    const [popupEventStatus, setStatus] = React.useState('busy');\n    const [mySelectedDate, setSelectedDate] = React.useState(now);\n\n    const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    // const body = (\n    // <div style={modalStyle} className={classes.paper}>\n    //     <h2 id=\"simple-modal-title\">Text in a modal</h2>\n    //     <p id=\"simple-modal-description\">\n    //         Material UI Modal.\n    //     </p>\n    // </div>\n    // );\n\n\n    const saveEvent = React.useCallback(() => {\n        const newEvent = {\n            id: tempEvent.id,\n            title: popupEventTitle,\n            description: popupEventDescription,\n            start: popupEventDate[0],\n            end: popupEventDate[1],\n            allDay: popupEventAllDay,\n            status: popupEventStatus,\n            color: tempEvent.color\n        };\n        if (isEdit) {\n            // update the event in the list\n            const index = myEvents.findIndex(x => x.id === tempEvent.id);;\n            const newEventList = [...myEvents];\n\n            newEventList.splice(index, 1, newEvent);\n            setMyEvents(newEventList);\n            // here you can update the event in your storage as well\n            // ...\n        } else {\n            // add the new event to the list\n            setMyEvents([...myEvents, newEvent]);\n            // here you can add the event to your storage as well\n            // ...\n        }\n        setSelectedDate(popupEventDate[0]);\n        // close the popup\n        setOpen(false);\n    }, [isEdit, myEvents, popupEventAllDay, popupEventDate, popupEventDescription, popupEventStatus, popupEventTitle, tempEvent]);\n\n    const deleteEvent = React.useCallback((event) => {\n        setMyEvents(myEvents.filter(item => item.id !== event.id));\n        setTimeout(() => {\n            snackbar({\n                button: {\n                    action: () => {\n                        setMyEvents(prevEvents => [...prevEvents, event]);\n                    },\n                    text: 'Undo'\n                },\n                message: 'Event deleted'\n            });\n        });\n    }, [myEvents]);\n\n    const loadPopupForm = React.useCallback((event) => {\n        setTitle(event.title);\n        setDescription(event.description);\n        setDate([event.start, event.end]);\n        setAllDay(event.allDay || false);\n        setStatus(event.status || 'busy');\n    }, []);\n\n    // handle popup form changes\n\n    const titleChange = React.useCallback((ev) => {\n        setTitle(ev.target.value);\n    }, []);\n\n    const descriptionChange = React.useCallback((ev) => {\n        setDescription(ev.target.value);\n    }, []);\n\n    const allDayChange = React.useCallback((ev) => {\n        setAllDay(ev.target.checked);\n    }, []);\n\n    const dateChange = React.useCallback((args) => {\n        setDate(args.value);\n    }, []);\n\n    const statusChange = React.useCallback((ev) => {\n        setStatus(ev.target.value);\n    }, []);\n\n    const onDeleteClick = React.useCallback(() => {\n        deleteEvent(tempEvent);\n        setOpen(false);\n    }, [deleteEvent, tempEvent]);\n\n    // scheduler options\n\n    const onSelectedDateChange = React.useCallback((event) => {\n        setSelectedDate(event.date);\n    }, []);\n\n    const onEventClick = React.useCallback((args) => {\n        setEdit(true);\n        setTempEvent({ ...args.event });\n        // fill popup form with event data\n        loadPopupForm(args.event);\n        setAnchor(args.domEvent.target);\n        // setOpen(true);\n        handleOpen();\n    }, [loadPopupForm]);\n\n    const onEventCreated = React.useCallback((args) => {\n        setEdit(false);\n        setTempEvent(args.event)\n        // fill popup form with event data\n        loadPopupForm(args.event);\n        setAnchor(args.target);\n        // open the popup\n        // setOpen(true);\n        handleOpen();\n    }, [loadPopupForm]);\n\n    const onEventDeleted = React.useCallback((args) => {\n        deleteEvent(args.event)\n    }, [deleteEvent]);\n\n    const onEventUpdated = React.useCallback((args) => {\n        // here you can update the event in your storage as well, after drag & drop or resize\n        // ...\n    }, []);\n\n    // datepicker options\n    const controls = React.useMemo(() => popupEventAllDay ? ['date'] : ['datetime'], [popupEventAllDay]);\n    const responsiveOptions = React.useMemo(() => popupEventAllDay ? {\n        medium: {\n            controls: ['calendar'],\n            touchUi: false\n        }\n    } : {\n            medium: {\n                controls: ['calendar', 'time'],\n                touchUi: false\n            }\n        }, [popupEventAllDay]);\n\n    // popup options\n    const headerText = React.useMemo(() => isEdit ? 'Edit event' : 'New Event', [isEdit]);\n    const popupButtons = React.useMemo(() => {\n        if (isEdit) {\n            return ['cancel', {\n                handler: () => {\n                    saveEvent();\n                },\n                keyCode: 'enter',\n                text: 'Save',\n                cssClass: 'mbsc-popup-button-primary'\n            }];\n        } else {\n            return ['cancel', {\n                handler: () => {\n                    saveEvent();\n                },\n                keyCode: 'enter',\n                text: 'Add',\n                cssClass: 'mbsc-popup-button-primary'\n            }];\n        }\n    }, [isEdit, saveEvent]);\n\n    const onClose = React.useCallback(() => {\n        if (!isEdit) {\n            // refresh the list, if add popup was canceled, to remove the temporary event\n            setMyEvents([...myEvents]);\n        }\n        setOpen(false);\n    }, [isEdit, myEvents]);\n\n    \n\n    React.useEffect(() => {\n        getJson('https://trial.mobiscroll.com/events/?vers=5', (events) => {\n            setEvents(events);\n        }, 'jsonp');\n    }, []);\n\n    React.useEffect(() => {\n        getJson('https://trial.mobiscroll.com//workday-events/?vers=5', (events) => {\n          setEvents(events);\n      }, 'jsonp');\n    }, []);\n\n    const [calView, setCalView] = React.useState(\n        {\n            calendar: { labels: true }\n        }\n    );\n\n    const changeView = (event) => {\n        let calView;\n        \n        switch (event.target.value) {\n            case 'month':\n                calView = {\n                    calendar: { labels: true }\n                }\n                break;\n            case 'week':\n                calView = {\n                    schedule: { type: 'week' }\n                }\n                break;\n            case 'day':\n                calView = {\n                    schedule: { type: 'day' }\n                }\n                break;\n        }\n\n        setView(event.target.value);\n        setCalView(calView);\n    }\n    \n    const customWithNavButtons = () => {\n        return <React.Fragment>\n            <CalendarNav className=\"cal-header-nav\" />\n            <div className=\"cal-header-picker\">\n                <SegmentedGroup value={view} onChange={changeView}>\n                    <SegmentedItem value=\"month\" style=\"height:50px\">\n                        Month\n                    </SegmentedItem>\n                    <SegmentedItem value=\"week\" style=\"height:50px\">\n                        Week\n                    </SegmentedItem>\n                    <SegmentedItem value=\"day\" style=\"height:50px\">\n                        Day\n                    </SegmentedItem>\n                </SegmentedGroup>\n            </div>\n            <CalendarPrev className=\"cal-header-prev\" />\n            <CalendarToday className=\"cal-header-today\" />\n            <CalendarNext className=\"cal-header-next\" />\n        </React.Fragment>;\n    }\n\n    return (\n        <div className=\"md-switching-view-cont\">\n            <Card className={classes.root} variant=\"outlined\">\n                <AppointmentsHeader>\n                    <HeadingWrapper className=\"title\">Appointments</HeadingWrapper>\n                    <InvoiceModal/>\n                </AppointmentsHeader>\n                <Eventcalendar\n                theme=\"ios\" \n                themeVariant=\"light\"\n                dragToMove={true}\n                dragToResize={true}\n                data={myEvents}\n                view={view}\n                view={viewSettings}\n                clickToCreate=\"double\"\n                dragToCreate={true}\n                selectedDate={mySelectedDate}\n                onSelectedDateChange={onSelectedDateChange}\n                onEventClick={onEventClick}\n                onEventCreated={onEventCreated}\n                onEventDeleted={onEventDeleted}\n                onEventUpdated={onEventUpdated}\n                renderHeader={customWithNavButtons}\n                height={750}\n                // width ={1550}\n                view={calView}\n                />\n                {/* <Popup\n                    display=\"bottom\"\n                    fullScreen={true}\n                    contentPadding={false}\n                    headerText={headerText}\n                    anchor={anchor}\n                    buttons={popupButtons}\n                    isOpen={isOpen}\n                    onClose={onClose}\n                    responsive={responsivePopup}\n                >\n                    <div className=\"mbsc-form-group\">\n                        <Input label=\"Title\" value={popupEventTitle} onChange={titleChange} />\n                        <Textarea label=\"Description\" value={popupEventDescription} onChange={descriptionChange} />\n                    </div>\n                    <div className=\"mbsc-form-group\">\n                        <Switch label=\"All-day\" checked={popupEventAllDay} onChange={allDayChange} />\n                        <Input ref={startRef} label=\"Starts\" />\n                        <Input ref={endRef} label=\"Ends\" />\n                        <Datepicker\n                            select=\"range\"\n                            controls={controls}\n                            touchUi={true}\n                            startInput={start}\n                            endInput={end}\n                            showRangeLabels={false}\n                            responsive={responsiveOptions}\n                            onChange={dateChange}\n                            value={popupEventDate}\n                        />\n                        <SegmentedGroup onChange={statusChange}>\n                            <SegmentedItem value=\"busy\" checked={popupEventStatus === 'busy'}>Show as busy</SegmentedItem>\n                            <SegmentedItem value=\"free\" checked={popupEventStatus === 'free'}>Show as free</SegmentedItem>\n                        </SegmentedGroup>\n                        {isEdit && <div className=\"mbsc-button-group\">\n                            <Button className=\"mbsc-button-block\" color=\"danger\" variant=\"outline\" onClick={onDeleteClick}>Delete event</Button>\n                        </div>}\n                    </div>\n                </Popup> */}\n                {/* <Modal\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    \n                >\n                    {body} */}\n            </Card>\n        </div>\n    ); \n}\n\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}